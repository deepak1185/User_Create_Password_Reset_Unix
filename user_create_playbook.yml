---

- name: Role ensures that the socks tunnel is setup
  hosts: localhost
  connection: local
  tasks:
    - include_role:
        name: ansible-role-event-socks-tunnel
      vars:
        acc_id: "{{ blueid_shortcode }}"
        transaction_id: "{{ tower_job_id }}"
      when: jh1_ip is defined #  only if endpoint is behind a jumphost

- name: Fail if OS on endpoint is not supported
  hosts: "{{ affected_host }}"
  strategy: free
  environment:
    LANG: "JA_JP.UTF-8"
  gather_facts: true
  gather_subset: "!all"
  vars:
    account_code: "{{ blueid_shortcode }}"
    trans_num: "{{ tower_job_id }}"
    os_type: "{{ ansible_facts['os_family'] }}"
  tasks:
    - name: Fail if OS on endpoint is not supported
      debug:
        msg:
          - "Endpoint OS:"
          - "os_family = {{ ansible_facts['os_family'] |
            default('UNDEFINED') }}"
          - "system = {{ ansible_facts['system'] |
            default('UNDEFINED') }}"
          - "distribution = {{ ansible_facts['distribution'] |
            default('UNDEFINED') }}"
          - "distribution_version = {{ ansible_facts['distribution_version'] |
            default('UNDEFINED') }}"
          - "architecture = {{ ansible_facts['architecture'] |
            default('UNDEFINED') }}"
          - "userspace_bits = {{ ansible_facts['userspace_bits'] |
            default('UNDEFINED') }}"
      failed_when: (not (ansible_facts['os_family']
        in ['RedHat', 'Suse', 'AIX', 'Solaris', 'Debian'])) or
        (ansible_facts['os_family'] == 'Solaris' and
        ansible_facts['distribution_version'] is version('11.1', '<')) or
        (ansible_facts['distribution'] == 'Ubuntu' and
        ansible_facts['distribution_version'] is version('16.04', '<')) or
        (ansible_facts['distribution'] == 'Debian' and
        ansible_facts['distribution_version'] is version('10', '<'))

    - name: Tasks to delete user on UNIX Endpoints
      include_role:
        name: user_create_use_role
        tasks_from: main.yml
        apply:
          become: true
      when: ansible_facts['os_family']
        in ['RedHat', 'Suse', 'AIX', 'Debian']

  
